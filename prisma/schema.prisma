generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid()) @db.Uuid
  email     String    @unique
  password  String
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  categories Category[]
  expenses   Expense[]
  revenues   Revenue[]
  balance    Balance?

  @@map("users")
}

model Category {
  id        String    @id @default(uuid()) @db.Uuid
  name      String
  userId    String    @db.Uuid
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  user     User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  expenses Expense[]

  @@map("categories")
}

model Expense {
  id          String    @id @default(uuid()) @db.Uuid
  amount      Decimal   @db.Decimal(10, 2)
  description String?
  date        DateTime
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  userId      String    @db.Uuid
  categoryId  String    @db.Uuid

  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@map("expenses")
}

model Revenue {
  id          String    @id @default(uuid()) @db.Uuid
  amount      Decimal   @db.Decimal(10, 2)
  description String?
  date        DateTime
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  userId      String    @db.Uuid

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("revenues")
}

model Balance {
  id              String    @id @default(uuid()) @db.Uuid
  totalAmount     Decimal   @db.Decimal(10, 2)
  totalRevenues   Decimal   @db.Decimal(10, 2)
  totalExpenses   Decimal   @db.Decimal(10, 2)
  referenceMonth  DateTime
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  userId          String    @unique @db.Uuid

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("balances")
}
